
Implement a min heap data structure. For the parent and left/right functions use bit manipulation operators. 
In addition your heap should have the following functionality

The ability to initially build the heap (build_min_heap)
The ability to heapify
The ability to get and remove ("pop") the root node from the heap (and of course re-heapify everything)
The heap should be generic to the type of data (can store floats, int, custom datastructure)
Show example(s) of your heap working. Please demonstrate ALL the functionality you implemented.
Upload your source code to github along with your example(s).




Heap after building from array: [1, 3, 2, 4, 5, 8]
Heap after insrting 0: [0, 3, 1, 4, 5, 8, 2]
Popped vale: 0
Heap after popping the root: [1, 3, 2, 4, 5, 8]
Current Heap: [2, 3, 8, 4, 5]
Popped value: 2
Current Heap: [3, 4, 8, 5]
Popped value: 3
Current Heap: [4, 5, 8]
Popped value: 4
Current Heap: [5, 8]
Popped value: 5
Current Heap: [8]
Popped value: 8
Current Heap: []
